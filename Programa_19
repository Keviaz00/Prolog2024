class GraphBFS
{
    private List<int>[] adj;

    public GraphBFS(int vertices)
    {
        adj = new List<int>[vertices];
        for (int i = 0; i < vertices; i++)
        {
            adj[i] = new List<int>();
        }
    }

    public void AddEdge(int u, int v)
    {
        adj[u].Add(v);
        adj[v].Add(u); // Para un grafo no dirigido
    }

    public void BFS(int start)
    {
        bool[] visited = new bool[adj.Length];
        Queue<int> queue = new Queue<int>();
        visited[start] = true;
        queue.Enqueue(start);

        while (queue.Count > 0)
        {
            int current = queue.Dequeue();
            Console.WriteLine($"Visitando nodo {current}");

            foreach (var neighbor in adj[current])
            {
                if (!visited[neighbor])
                {
                    visited[neighbor] = true;
                    queue.Enqueue(neighbor);
                }
            }
        }
    }
}
